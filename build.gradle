plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "8.1.1" apply false

    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "com.github.johnrengelman.shadow"
    apply plugin: "dev.architectury.loom"

    configurations {
        common
        shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
        compileClasspath.extendsFrom common
        runtimeClasspath.extendsFrom common
        developmentFabric.extendsFrom common
    }

    processResources {
        def resourceTargets = [
            "fabric.mod.json",
            "META-INF/neoforge.mods.toml",
        ]

        def replaceProperties = [
            version                        : mod_version,
            fabric_minecraft_version_range : fabric_minecraft_version_range,
            neo_version_range              : neo_minecraft_version_range,
            fabric_loader_version          : fabric_loader_version,
            cloth_config_version           : cloth_config_version,
            modmenu_version                : modmenu_version,
        ]

        inputs.properties replaceProperties
        filesMatching(resourceTargets) {
            expand replaceProperties
        }
    }


    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"

        mappings loom.layered {
            it.mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
            it.mappings "dev.architectury:yarn-mappings-patch-neoforge:${project.neoforge_yarn_mappings_patch}"
        }
    }

    shadowJar {
        exclude "architectury.common.json"

        configurations = [project.configurations.shadowCommon]
        archiveClassifier.set("dev-shadow")
    }

    jar {
        archiveClassifier.set("dev")
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base.archivesName = rootProject.mod_id
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Architectury, Cloth Config
        maven { url "https://maven.shedaniel.me/" }
        // ModMenu
        maven { url "https://maven.terraformersmc.com/" }
        // NeoForge
        maven { url "https://maven.neoforged.net/releases/" }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    java {
        withSourcesJar()
    }
}